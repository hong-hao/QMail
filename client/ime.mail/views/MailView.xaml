<UserControl x:Class="ime.mail.views.MailView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:c="clr-namespace:ime.controls;assembly=ime.controls" 
             xmlns:control="clr-namespace:ime.mail.controls"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000">
    <UserControl.Resources>
        <DataTemplate x:Key="Record" DataType="ListItem">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image Source="{Binding Path=Attribute[iconUrl].Value}" Width="16" Height="16" Margin="1" Cursor="Hand"/>
                <Separator Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="2" Cursor="Hand">
                    <Separator.LayoutTransform>
                        <RotateTransform CenterX="0" CenterY="0" Angle="90" />
                    </Separator.LayoutTransform>
                </Separator>
                <TextBlock Grid.Column="2" Text="{Binding Path=Attribute[label].Value}" VerticalAlignment="Center" Margin="2,1" Cursor="Hand"/>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot">
    	<VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="VisualStateGroup">
    			<VisualState x:Name="INBOX"/>
    			<VisualState x:Name="OUTBOX">
    				<Storyboard>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnGarbage">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnDelete">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnReply">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnAllReply">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnTransmit">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnTransfer">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="DSBOX">
    				<Storyboard>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnGarbage">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnDelete">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnReply">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnAllReply">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnTransmit">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnTransfer">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="DRAFT">
    				<Storyboard>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnGarbage">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnDelete">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnReply">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnAllReply">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnTransmit">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnTransfer">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="SPAM">
    				<Storyboard>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnReply">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnAllReply">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnTransmit">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="SENDED">
    				<Storyboard>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnGarbage">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnDelete">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnReply">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnAllReply">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnTransfer">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    			<VisualState x:Name="DELETED">
    				<Storyboard>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnDelete">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnReply">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnAllReply">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    					<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="btnTransmit">
    						<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
    					</BooleanAnimationUsingKeyFrames>
    				</Storyboard>
    			</VisualState>
    		</VisualStateGroup>
    	</VisualStateManager.VisualStateGroups>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="58" />
            <RowDefinition Height="50*" />
            <RowDefinition Height="50*" />
        </Grid.RowDefinitions>
        <StackPanel Grid.ColumnSpan="2" VerticalAlignment="Stretch" Orientation="Horizontal" Margin="0,0,0,1" >
            <Button x:Name="btnNewMail" VerticalAlignment="Stretch" HorizontalAlignment="Left" MinWidth="60">
                <StackPanel Margin="2">
                    <Image Source="/ime.mail;component/Icons/mail_48.png" Width="32" Height="32"></Image>
                    <TextBlock HorizontalAlignment="Center">新邮件</TextBlock>
                </StackPanel>
            </Button>
            <c:SplitButton x:Name="btnGarbage" Margin="2,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Left">
                <StackPanel Margin="2">
                    <Image Source="/ime.mail;component/Icons/spam.png" Width="32"></Image>
                    <TextBlock HorizontalAlignment="Center">垃圾邮件</TextBlock>
                </StackPanel>
                <c:SplitButton.DropDownContent>
                    <ListBox x:Name="lbGarbage" ItemsSource="{Binding Elements}" BorderThickness="0" HorizontalContentAlignment="Stretch"
                         ItemTemplate ="{StaticResource Record}"/>
                </c:SplitButton.DropDownContent>
            </c:SplitButton>
            <Button x:Name="btnDelete" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="2,0,0,0" MinWidth="60">
                <StackPanel Margin="2">
                    <Image Source="/ime.mail;component/Icons/delete.png" Width="32"></Image>
                    <TextBlock HorizontalAlignment="Center">删除</TextBlock>
                </StackPanel>
            </Button>
            <Separator Margin="2,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"></Separator>
            <Button x:Name="btnReply" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="0,0,0,0" MinWidth="60">
                <StackPanel Margin="2">
                    <Image Source="/ime.mail;component/Icons/mail_reply.png" Width="32"></Image>
                    <TextBlock HorizontalAlignment="Center">回复</TextBlock>
                </StackPanel>
            </Button>
            <Button x:Name="btnAllReply" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="2,0,0,0" MinWidth="60">
                <StackPanel Margin="2">
                    <Image Source="/ime.mail;component/Icons/mail_reply_all.png" Width="32"></Image>
                    <TextBlock HorizontalAlignment="Center">全部回复</TextBlock>
                </StackPanel>
            </Button>
            <Button x:Name="btnTransmit" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="2,0,0,0" MinWidth="60">
                <StackPanel Margin="2">
                    <Image Source="/ime.mail;component/Icons/mail_forward.png" Width="32"></Image>
                    <TextBlock HorizontalAlignment="Center">转发</TextBlock>
                </StackPanel>
            </Button>
            <Separator Margin="2,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"></Separator>
            <c:SplitButton x:Name="btnTransfer" Margin="0,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Left" MinWidth="60">
                <c:SplitButton.Content>
                    <StackPanel Margin="2">
                        <Image Source="/ime.mail;component/Icons/mail_move.png" Width="32"></Image>
                        <TextBlock HorizontalAlignment="Center">转移至</TextBlock>
                    </StackPanel>
                </c:SplitButton.Content>
                <c:SplitButton.DropDownContent>
                    <ListBox x:Name="lbTransfer" ItemsSource="{Binding Elements}" BorderThickness="0" HorizontalContentAlignment="Stretch"
                         ItemTemplate ="{StaticResource Record}"/>
                </c:SplitButton.DropDownContent>
            </c:SplitButton>
            <c:SplitButton Margin="2,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Left" MinWidth="60" Visibility="Collapsed">
                <StackPanel Margin="2">
                    <Image Source="/ime.mail;component/Icons/mail_mark.png" Width="32"></Image>
                    <TextBlock HorizontalAlignment="Center">标记</TextBlock>
                </StackPanel>
            </c:SplitButton>
            <Separator Margin="2,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"></Separator>
            <Button VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="0,0,0,0" Click="OnSendAndRecv" >
                <StackPanel Margin="2">
                    <Image Source="/ime.mail;component/Icons/mail-send-receive.png" Width="32"></Image>
                    <TextBlock HorizontalAlignment="Center">发送和接收</TextBlock>
                </StackPanel>
            </Button>
            <Separator Margin="2,0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"></Separator>
            <Button VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="0,0,0,0" Click="OnAccountManager" >
                <StackPanel Margin="2">
                    <Image Source="/ime.mail;component/Icons/mail_account.png" Width="32"></Image>
                    <TextBlock HorizontalAlignment="Center">帐户管理</TextBlock>
                </StackPanel>
            </Button>
        </StackPanel>
        <control:MailBoxBar x:Name="mailBoxBar" Margin="0,0,3,0" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.RowSpan="2" />
        <GridSplitter Grid.Row="1" Grid.RowSpan="2" Margin="-3,0,0,0" Width="3" Background="Transparent" />
        <control:MailList x:Name="mailList" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,3" />
        <GridSplitter ResizeDirection="Rows" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" Height="3" VerticalAlignment="Bottom" Background="Transparent"/>
        <control:MailReader x:Name="mailReader" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
    </Grid>
</UserControl>
